// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamWebPage.Models;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(STREAMINGDBContext))]
    partial class STREAMINGDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.AppPub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppName")
                        .HasColumnName("App_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AppVersion")
                        .HasColumnName("App_Version")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReleaseNotes")
                        .HasColumnName("Release_Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TansactionDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tansaction_DateTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("AppPub");
                });

            modelBuilder.Entity("WebAPI.Models.AspNetRoleClaims", b =>
                {
                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("WebAPI.Models.AspNetRoles", b =>
                {
                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("WebAPI.Models.AspNetUserClaims", b =>
                {
                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("WebAPI.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("WebAPI.Models.AspNetUserRoles", b =>
                {
                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("WebAPI.Models.AspNetUserTokens", b =>
                {
                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebAPI.Models.AspNetUsers", b =>
                {
                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("WebAPI.Models.ChannelAnalytics", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int?>("AdBreaksMinutes")
                        .HasColumnName("Ad_Breaks_Minutes")
                        .HasColumnType("int");

                    b.Property<int?>("AdRevenue")
                        .HasColumnName("Ad_Revenue")
                        .HasColumnType("int");

                    b.Property<int?>("AdTimeSecondsPerHour")
                        .HasColumnName("Ad_Time_Seconds_Per_Hour")
                        .HasColumnType("int");

                    b.Property<int?>("AverageViewers")
                        .HasColumnName("Average_Viewers")
                        .HasColumnType("int");

                    b.Property<int?>("BitsRevenue")
                        .HasColumnName("Bits_Revenue")
                        .HasColumnType("int");

                    b.Property<int?>("BountiesRevenue")
                        .HasColumnName("Bounties_Revenue")
                        .HasColumnType("int");

                    b.Property<int?>("ChatMessages")
                        .HasColumnName("Chat_Messages")
                        .HasColumnType("int");

                    b.Property<int?>("Chatters")
                        .HasColumnType("int");

                    b.Property<int?>("ClipViews")
                        .HasColumnName("Clip_Views")
                        .HasColumnType("int");

                    b.Property<int?>("ClipsCreated")
                        .HasColumnName("Clips_Created")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("ExtensionsRevenue")
                        .HasColumnName("Extensions_Revenue")
                        .HasColumnType("int");

                    b.Property<int?>("Follows")
                        .HasColumnType("int");

                    b.Property<int?>("GameSalesRevenue")
                        .HasColumnName("Game_Sales_Revenue")
                        .HasColumnType("int");

                    b.Property<int?>("GiftedSubsRevenue")
                        .HasColumnName("Gifted_Subs_Revenue")
                        .HasColumnType("int");

                    b.Property<int?>("GiftedTier1Subs")
                        .HasColumnName("Gifted_Tier_1_subs")
                        .HasColumnType("int");

                    b.Property<int?>("HostsAndRaidsViewers")
                        .HasColumnName("Hosts_and_Raids_Viewers")
                        .HasColumnType("int");

                    b.Property<int?>("LiveViews")
                        .HasColumnName("Live_Views")
                        .HasColumnType("int");

                    b.Property<int?>("MaxViewers")
                        .HasColumnName("Max_Viewers")
                        .HasColumnType("int");

                    b.Property<int?>("MinutesStreamed")
                        .HasColumnName("Minutes_Streamed")
                        .HasColumnType("int");

                    b.Property<int?>("MinutesWatched")
                        .HasColumnName("Minutes_Watched")
                        .HasColumnType("int");

                    b.Property<int?>("PrimeRevenue")
                        .HasColumnName("Prime_Revenue")
                        .HasColumnType("int");

                    b.Property<int?>("PrimeSubs")
                        .HasColumnName("Prime_Subs")
                        .HasColumnType("int");

                    b.Property<int?>("SubRevenue")
                        .HasColumnName("Sub_Revenue")
                        .HasColumnType("int");

                    b.Property<int?>("Tier1Subs")
                        .HasColumnName("Tier_1_subs")
                        .HasColumnType("int");

                    b.Property<int?>("TotalGiftedSubs")
                        .HasColumnName("Total_Gifted_Subs")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPaidSubs")
                        .HasColumnName("Total_Paid_Subs")
                        .HasColumnType("int");

                    b.Property<int?>("UniqueViewers")
                        .HasColumnName("Unique_Viewers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChannelAnalytics");
                });

            modelBuilder.Entity("WebAPI.Models.GameName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameName1")
                        .HasColumnName("GameName")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<int?>("GameTypeId")
                        .HasColumnName("GameTypeID")
                        .HasColumnType("int");

                    b.Property<string>("GameTypeName")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("GameTypeId");

                    b.ToTable("GameName");
                });

            modelBuilder.Entity("WebAPI.Models.GameType", b =>
                {
                    b.Property<int>("GameTypeId")
                        .HasColumnName("GameTypeID")
                        .HasColumnType("int");

                    b.Property<string>("GameTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameTypeId");

                    b.ToTable("GameType");
                });

            modelBuilder.Entity("WebAPI.Models.UserMessage", b =>
                {
                    b.Property<int>("UserMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserMessageID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TransactionDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Transaction DateTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserMessage1")
                        .HasColumnName("UserMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserMessageId");

                    b.ToTable("UserMessage");
                });

            modelBuilder.Entity("WebAPI.Models.UserName", b =>
                {
                    b.Property<int>("UserNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserNameID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BitAmount")
                        .HasColumnName("Bit_Amount")
                        .HasColumnType("int");

                    b.Property<string>("Founder")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GivenBits")
                        .HasColumnName("Given_Bits")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IsModerator")
                        .HasColumnName("Is_Moderator")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IsSubscribed")
                        .HasColumnName("Is_Subscribed")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IsVip")
                        .HasColumnName("Is_VIP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SubLength")
                        .HasColumnName("Sub_Length")
                        .HasColumnType("int");

                    b.Property<DateTime>("TansactionDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tansaction DateTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserName1")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserNameId");

                    b.ToTable("UserName");
                });

            modelBuilder.Entity("WebAPI.Models.UserNameandMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TransactionDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Transaction DateTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserNameandMessage");
                });

            modelBuilder.Entity("WebAPI.Models.GameName", b =>
                {
                    b.HasOne("WebAPI.Models.GameType", "GameType")
                        .WithMany("GameName")
                        .HasForeignKey("GameTypeId")
                        .HasConstraintName("FK_GameName_GameType");
                });
#pragma warning restore 612, 618
        }
    }
}
